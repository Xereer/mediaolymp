@import "../../../../assets/styles/theming";

:host {
  @include flexWrapper(column, flex-start, stretch);
  @include wrapperInner();
  @include font-size-s();
  @include fillLinkButton();
  @include titledSection();
  @include title();
  @include text();
  @include fadeIn();
  background: $white;

  .about {
    @include firstTitle(80%);
    padding-block: adaptiveValue(64, 32);
    background-color: $orange-40-a;
    position: relative;

    @include maxWidth($breakpoint-m) {
      background: $orange-40-a url("../../../../assets/images/lines/lines-1.png") no-repeat;
      background-size: cover;
    }

    @include minWidth($breakpoint-m) {
      &:after {
        @include blockSize(45%);
        content: '';
        position: absolute;
        background: url("../../../../assets/images/home/mentors-full.png") no-repeat bottom right;
        background-size: contain;
        bottom: 0;
        right: calc(#{adaptiveValue(100, 20)} - 20px);
        animation: fadeInLeftLight $transition*2;
      }
    }

    @include minWidth($breakpoint-l) {
      &:after {
        width: 50%;
        background-image: url("../../../../assets/images/home/mentors.png");
      }
    }

    &__wrapper {
      @include flexWrapper();
      gap: gap_l(2);

      @include minWidth($breakpoint-m) {
        width: 50%;
      }

      @include minWidth($breakpoint-l) {
        width: 40%;
      }
    }

    &__title {
      @include font-size-m;
    }

    .link_button {
      @include onHover {
        background: $orange-50;
      }
    }
  }

  .wrapper {
    @include flexWrapper(column, flex-start, stretch);
    gap: adaptiveValue(64, 32);
    padding-block: adaptiveValue(64, 32);
    background: linear-gradient(180deg, $orange-100 40%, $orange-50 100%);
  }

  .program {
    @include flexWrapper(row, space-around, stretch);
    @include card();
    gap: adaptiveValue(64, 32);
    padding: adaptiveValue(48, 24) $padding;
    background: $white;
    overflow: hidden;

    @include maxWidth($breakpoint-m) {
      flex-direction: column;
      position: relative;

      &:before,
      &:after {
        @include blockSize();
        position: absolute;
        content: '';
        inset: 0;
        opacity: .1;
        background-image: url("../../../../assets/images/home/msu.png");
        background-position: bottom center;
        background-repeat: repeat-x;
      }

      &:before {
        background-size: 100%;
      }

      &:after {
        transform: rotate(180deg);
        background-size: 50%;
      }
    }

    @include minWidth($breakpoint-m) {
      padding-bottom: adaptiveValue(160, 80);
      background: $white no-repeat url("../../../../assets/images/home/msu.png") bottom center;
      background-size: 50%;
    }

    &__block {
      @include flexWrapper(column, flex-start, center);
      flex: 1 1 50%;

      @include maxWidth($breakpoint-m) {
        gap: gap_s(2);
      }

      @include minWidth($breakpoint-l) {
        > span {
          width: 50%;
          margin: auto;
        }
      }

      &-content {
        @include flexWrapper(column, center, center);
        flex-grow: 1;

        &_center {
          text-align: center;
          @include font-size-m();
        }
      }

      .text_bold {
        @include font-size-m();
        text-align: center;
      }
    }

    .olympiads {
      gap: adaptiveValue(32, 8);

      &__list {
        @include flexWrapper(column, flex-start, stretch);
        gap: $gap;

        li:not(:has(span)),
        span {
          padding-left: padding_l(1.75);
          position: relative;

          &:not(:has(span)):before {
            @include blockSize(30px, adaptiveValue(28, 20));
            content: '';
            position: absolute;
            left: 0;
            background: no-repeat url("../../../../assets/svg/home/check.svg");
            background-size: contain;
          }
        }

        li:has(span) {
          @include flexWrapper(row, space-between, center);
          gap: gap_l(2);
        }
      }
    }
  }

  .reasons {
    gap: adaptiveValue(48, 16) !important;

    &__cards {
      display: grid;
      gap: adaptiveValue(48, 16);

      @include minWidth($breakpoint-m) {
        @include font-size-m();
        grid-template-columns: 2fr 1fr;
      }

      @include minWidth($breakpoint-l) {
        width: 80%;
        margin: auto;
      }

      &-item {
        @include card();
        padding: adaptiveValue(64, 16);
        position: relative;

        @include minWidth($breakpoint-m) {
          > span {
            position: relative;
            z-index: 2;
          }

          &:after {
            content: '';
            position: absolute;
            background-color: $orange-50;
            background-size: cover;
          }

          &_winners {
            grid-column: 1/2;
            grid-row: 1/2;

            &:after {
              @include blockSize(150px, 150px);
              top: 40%;
              right: -5%;
              -webkit-mask-image: url("../../../../assets/svg/home/medal.svg");
              mask-image: url("../../../../assets/svg/home/medal.svg");
            }
          }

          &_media {
            grid-column: 1/2;
            grid-row: 2/3;

            &:after {
              @include blockSize(138px, 180px);
              bottom: -7%;
              right: -3%;
              -webkit-mask-image: url("../../../../assets/svg/home/girl.svg");
              mask-image: url("../../../../assets/svg/home/girl.svg");
            }
          }

          &_programs {
            grid-column: 2/3;
            grid-row: 1/3;

            &:after {
              @include blockSize(138px, 100%);
              bottom: 0;
              right: 0;
              -webkit-mask-image: url("../../../../assets/svg/home/microphone.svg");
              mask-image: url("../../../../assets/svg/home/microphone.svg");
            }
          }

          &_universities {
            grid-column: 1/3;
            grid-row: 3/4;

            &:after {
              @include blockSize(130px, 100px);
              bottom: 5px;
              right: 10px;
              -webkit-mask-image: url("../../../../assets/svg/home/hat.svg");
              mask-image: url("../../../../assets/svg/home/hat.svg");
            }
          }
        }
      }
    }
  }

  .results {
    @include flexWrapper(column, flex-start, stretch);
    padding-block: adaptiveValue(96, 48) adaptiveValue(128, 64);
    background: no-repeat url("../../../../assets/images/lines/lines-2.png") center;
    background-size: cover;

    .title {
      @include flexWrapper(column, flex-start, center);
      align-self: center;

      span:last-child {
        font-size: adaptiveValue(48, 30);
      }
    }

    &__wrapper {
      @include flexWrapper(column, flex-start, center);
      @include font-size-m();
      text-align: center;
      gap: adaptiveValue(64, 32);

      @include minWidth($breakpoint-m) {
        width: 65%;
        margin: auto;
      }

      @include minWidth($breakpoint-l) {
        width: 50%;
      }

      .link_button {
        @include minWidth($breakpoint-s) {
          padding-inline: padding_l(2.5);
        }
      }
    }
  }

  .study {
    box-shadow: rgba($black, 0.3) 0 0 25px;
    padding-block: adaptiveValue(48, 24) adaptiveValue(80, 40);
    gap: adaptiveValue(32, 16) !important;

    &__wrapper {
      display: grid;
      gap: adaptiveValue(48, 16);

      @include minWidth($breakpoint-m) {
        grid-template-columns: repeat(3, 1fr);
      }
    }

    &__card {
      $card-padding: adaptiveValue(32, 16);
      @include card();
      height: 100%;
      background: linear-gradient(180deg, $orange-100 0%, $orange-50 100%);
      color: $white;
      padding-block: calc(2 * $card-padding) $card-padding;

      &:nth-child(2) {
        padding-bottom: 0;
      }

      &-text {
        padding: $card-padding;
      }

      &-img {
        padding-inline: $card-padding;

        img {
          border-radius: $border-radius;
          overflow: hidden;

          @include maxWidth($breakpoint-s) {
            width: 75%;
            margin: auto;
          }
        }
      }

      &-wrapper {
        @include flexWrapper(column, space-between, stretch);
        border-top: 2px solid currentColor;
        height: 100%;
        gap: $gap;

        @include minWidth($breakpoint-s + 200) {
          @include maxWidth($breakpoint-m) {
            flex-direction: row;
            padding-top: adaptiveValue(32, 16);
            align-items: center;

            .study__card-text {
              padding-top: 0;
            }

            img {
              max-width: 300px;
            }
          }
        }

        @include maxWidth($breakpoint-s + 200) {
          gap: 0;
        }
      }
    }
  }

  .feedback {
    align-items: center !important;
    padding-block: adaptiveValue(96, 48);

    &__wrapper {
      display: grid;
      justify-items: center;

      @include minWidth($breakpoint-m) {
        grid-template-columns: repeat(3, 1fr);
      }

      @include maxWidth($breakpoint-m) {
        align-self: stretch;
        gap: $gap;

        @include minWidth($breakpoint-s) {
          position: relative;

          &:after {
            @include blockSize();
            position: absolute;
            content: '';
            background: url("../../../../assets/svg/home/arrow.svg") no-repeat right;
            background-size: contain;
          }
        }
      }

      .point {
        @include flexWrapper(column, flex-start, center);
        gap: adaptiveValue(48, 24);
        width: 75%;
        text-align: center;

        @include maxWidth($breakpoint-m) {
          width: 100%;
          flex-direction: row;
          padding-left: padding_s(2);

          @include minWidth($breakpoint-s) {
            text-align: left;
          }

          &:nth-child(2) {
            order: -1;
          }
        }


        &__img {
          @include flexWrapper(row, center, center);
          @include blockSize(100px, 100px);
          background-color: $orange-100;
          color: $white;
          border-radius: 50%;
          position: relative;
          flex-shrink: 0;

          @include maxWidth($breakpoint-m) {
            @include blockSize(75px, 75px);
          }

          @include minWidth($breakpoint-xl) {
            @include blockSize(200px, 200px);
          }

          img {
            overflow: visible;
            @include blockSize(55%, 55%);
          }

          &:after {
            @include blockSize(115%, 115%);
            position: absolute;
            content: '';
            border: 2px dashed $orange-100;
            border-radius: 50%;
          }

          @include onHover {
            &:after {
              animation: rotate .8s
            }
          }
        }

        &__title {
          width: 100%;
        }
      }
    }
  }

  .slider {
    @include slider();
    align-items: center !important;
    background: $orange-50;
    padding-block: adaptiveValue(64, 32);
    position: relative;

    ::ng-deep {
      p-carousel {
        @include minWidth($breakpoint-l) {
          width: 80%;
        }
      }
    }

    &:after {
      @include blockSize();
      content: '';
      position: absolute;
      background: url("../../../../assets/images/lines/lines-1.png") no-repeat;
      background-size: cover;
      transform: rotate(180deg);
      inset: 0;
      opacity: .4;
    }

    &__card {
      aspect-ratio: 4 / 3;
      margin: auto;
      border-radius: border_radius_l(2);
      overflow: hidden;
      max-height: calc(100vh - 150px);

      img {
        @include blockSize();
        object-fit: cover;
        border-radius: border_radius_l(2);
        overflow: hidden;
      }
    }

    .title {
      font-size: adaptiveValue(40, 20);
      position: relative;
      z-index: 1;
    }
  }
}
